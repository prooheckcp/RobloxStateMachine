"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[467],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),f=r,h=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},31401:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:2,sidebar_label:"\ud83d\udd35  States"},l="\ud83d\udd35 States",i={unversionedId:"tutorial/States",id:"tutorial/States",title:"\ud83d\udd35 States",description:"Now that we organized our files let's setup the states first! We will start by making a simple state template inside of the Blue file!",source:"@site/docs/tutorial/States.md",sourceDirName:"tutorial",slug:"/tutorial/States",permalink:"/RobloxStateMachine/docs/tutorial/States",draft:!1,editUrl:"https://github.com/prooheckcp/RobloxStateMachine/edit/master/docs/tutorial/States.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"\ud83d\udd35  States"},sidebar:"defaultSidebar",previous:{title:"\ud83e\uddf9 Organization",permalink:"/RobloxStateMachine/docs/tutorial/Organization"},next:{title:"\ud83e\udd16\ud83d\udd04 State Machine",permalink:"/RobloxStateMachine/docs/tutorial/StateMachine"}},s={},c=[],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-states"},"\ud83d\udd35 States"),(0,r.kt)("p",null,"Now that we organized our files let's setup the states first! We will start by making a simple state template inside of the Blue file!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal RobloxStateMachine = require(ReplicatedStorage.RobloxStateMachine)\n\nlocal Blue = RobloxStateMachine.State.new("Blue") -- The name of our state\n\nreturn Blue\n')),(0,r.kt)("p",null,"This creates and returns a state called Blue. Now let's make it change the color of our part to blue when it enters this state. Let's also print all life-cycles to have an idea of what is going on!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal RobloxStateMachine = require(ReplicatedStorage.RobloxStateMachine)\n\nlocal Blue = RobloxStateMachine.State.new("Blue") -- The name of our state\n\nfunction Blue:OnInit() -- This gets called as soon as the state machine is created\n    print("Blue Init!")\nend\n\nfunction Blue:OnEnter(data) -- Called whenever the state changes into "Blue"\n    print("Blue Enter!")\n    -- Could also write: self.Data.part.Color\n    data.part.Color = Color3.fromRGB(0, 0, 255) -- Change color to blue!\nend\n\nfunction Blue:OnHeartbeat() -- Called every heartbeat\n\nend\n\nfunction Blue:OnLeave() -- Called whenever the state is left even if target gets destroyed\n    print("Blue Leave!")\nend\n\nreturn Blue\n')),(0,r.kt)("p",null,"This will turn our part blue when it enters the blue state! Are you confused about where the \"data.part\" comes from? Don't worry, we're getting right into that next!"))}d.isMDXComponent=!0}}]);