"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[165],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=n,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return a?r.createElement(h,i(i({ref:t},p),{},{components:a})):r.createElement(h,i({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7605:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:1,sidebar_label:"\ud83e\uddf9 Organization"},i="\ud83e\uddf9 Organization",l={unversionedId:"tutorial/Organization",id:"tutorial/Organization",title:"\ud83e\uddf9 Organization",description:"Remember, the main purpose we use State Machines to begin with is so we can break down a complex system into smaller and simpler systems! So organization is key. I will be showing how I personally like to organize my State Machines. Obviously you can do it however you please yet I'd still highly recommend you to do it this way!",source:"@site/docs/tutorial/Organization.md",sourceDirName:"tutorial",slug:"/tutorial/Organization",permalink:"/RobloxStateMachine/docs/tutorial/Organization",draft:!1,editUrl:"https://github.com/prooheckcp/RobloxStateMachine/edit/master/docs/tutorial/Organization.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"\ud83e\uddf9 Organization"},sidebar:"defaultSidebar",previous:{title:"\ud83d\ude80Getting Started",permalink:"/RobloxStateMachine/docs/gettingStarted"},next:{title:"\ud83d\udd35  States",permalink:"/RobloxStateMachine/docs/tutorial/States"}},s={},c=[{value:"First Create 2 folders",id:"first-create-2-folders",level:2},{value:"Create 2 ModuleScripts in each folder as the following example",id:"create-2-modulescripts-in-each-folder-as-the-following-example",level:2},{value:"Create a Part and call it &quot;myPart&quot;",id:"create-a-part-and-call-it-mypart",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-organization"},"\ud83e\uddf9 Organization"),(0,n.kt)("p",null,"Remember, the main purpose we use State Machines to begin with is so we can break down a complex system into smaller and simpler systems! So organization is key. I will be showing how I personally like to organize my State Machines. Obviously you can do it however you please yet I'd still highly recommend you to do it this way!"),(0,n.kt)("h2",{id:"first-create-2-folders"},"First Create 2 folders"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.discordapp.com/attachments/670023265455964198/1105650053118431342/Screenshot_2023-05-10_at_01.18.06.png",alt:null})),(0,n.kt)("p",null,"We will be using 1 folder to group the states and the second one to group the transitions! Now let's start by making 2 states and 2 transitions."),(0,n.kt)("h2",{id:"create-2-modulescripts-in-each-folder-as-the-following-example"},"Create 2 ModuleScripts in each folder as the following example"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.discordapp.com/attachments/670023265455964198/1105650694846947459/Screenshot_2023-05-10_at_01.20.53.png",alt:null})),(0,n.kt)("p",null,"In this example we will be creating a state machine that manages the color of a part! it will have 2 states: a red and a blue colour.\nSo we want two states: Blue and Red. We also want to make 2 transitions that will allow us to go from blue to red and from red to blue!"),(0,n.kt)("h2",{id:"create-a-part-and-call-it-mypart"},'Create a Part and call it "myPart"'),(0,n.kt)("p",null,"We will be creating a part in the workspace and use it as an example to how we can make/use the StateMachine\n",(0,n.kt)("img",{parentName:"p",src:"https://cdn.discordapp.com/attachments/670023265455964198/1105654243802755132/Screenshot_2023-05-10_at_01.34.58.png",alt:null})))}d.isMDXComponent=!0}}]);