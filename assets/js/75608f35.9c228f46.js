"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[838],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),h=r,f=d["".concat(s,".").concat(h)]||d[h]||p[h]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9472:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:5,sidebar_label:"\ud83d\udd00 Transitions"},i="\ud83d\udd00 Transitions",l={unversionedId:"tutorial/Transitions",id:"tutorial/Transitions",title:"\ud83d\udd00 Transitions",description:'Now that we finished our states we want to add the transitions to tell our state machine when should it change the state. Let\'s open the "ToRed" Lua file that we created early and write the following code:',source:"@site/docs/tutorial/Transitions.md",sourceDirName:"tutorial",slug:"/tutorial/Transitions",permalink:"/RobloxStateMachine/docs/tutorial/Transitions",draft:!1,editUrl:"https://github.com/prooheckcp/RobloxStateMachine/edit/master/docs/tutorial/Transitions.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"\ud83d\udd00 Transitions"},sidebar:"defaultSidebar",previous:{title:"\ud83d\udcc2 Sending Data",permalink:"/RobloxStateMachine/docs/tutorial/ChangeData"},next:{title:"\ud83d\udd1a  Final Steps",permalink:"/RobloxStateMachine/docs/tutorial/Finish"}},s={},c=[],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-transitions"},"\ud83d\udd00 Transitions"),(0,r.kt)("p",null,'Now that we finished our states we want to add the transitions to tell our state machine when should it change the state. Let\'s open the "ToRed" Lua file that we created early and write the following code:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal RobloxStateMachine = require(ReplicatedStorage.RobloxStateMachine)\n\nlocal ToRed = RobloxStateMachine.Transition.new("Red") -- This means we want to change to the red state\n\n-- This will change the part state from blue to red after 5 seconds\nfunction ToRed:OnDataChanged(data)\n    if data.timer < 5 then\n        return false -- This means we dont want to change the state\n    else\n        return true -- Return true after 5 seconds\n    end\nend\n\nreturn ToRed\n')),(0,r.kt)("p",null,"And that's it! This will make our state move from Blue to Red after 5 seconds! Now let's make the code to change our state from Red to blue also after another 5 seconds..."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal RobloxStateMachine = require(ReplicatedStorage.RobloxStateMachine)\n\nlocal ToBlue = RobloxStateMachine.Transition.new("Blue") -- This means we want to change to the blue state\n\n-- This will change the part state from red to blue after 5 seconds\nfunction ToBlue:OnDataChanged(data)\n    if data.timer < 5 then\n        return false -- This means we dont want to change the state\n    else\n        return true -- Return true after 5 seconds\n    end\nend\n\nreturn ToBlue\n')))}p.isMDXComponent=!0}}]);