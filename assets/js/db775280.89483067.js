"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[665],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,c(c({ref:t},u),{},{components:n})):r.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=f;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:a,c[1]=s;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},97945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:4,sidebar_label:"\ud83d\udd0d Access internals"},c="\ud83d\udd0d Access internals",s={unversionedId:"AdvancedConcepts/accesInternals",id:"AdvancedConcepts/accesInternals",title:"\ud83d\udd0d Access internals",description:"While inside a state or transition you can actually access to a lot of information about our state machine!",source:"@site/docs/AdvancedConcepts/accesInternals.md",sourceDirName:"AdvancedConcepts",slug:"/AdvancedConcepts/accesInternals",permalink:"/RobloxStateMachine/docs/AdvancedConcepts/accesInternals",draft:!1,editUrl:"https://github.com/prooheckcp/RobloxStateMachine/edit/master/docs/AdvancedConcepts/accesInternals.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"\ud83d\udd0d Access internals"},sidebar:"defaultSidebar",previous:{title:"\ud83d\uded1 Stop State Transition",permalink:"/RobloxStateMachine/docs/AdvancedConcepts/stopStateTransition"}},i={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-access-internals"},"\ud83d\udd0d Access internals"),(0,a.kt)("p",null,"While inside a state or transition you can actually access to a lot of information about our state machine!\nTo do this all you have to do is call ",(0,a.kt)("strong",{parentName:"p"},"self")," from within any of the virtual methods."),(0,a.kt)("p",null,"Here's an example of what you can access from within the state"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'-- Blue.Lua\nlocal GoToRed = require(script.Parent.Parent.Transitions.GoToRed)\nlocal ChangeColorState = require(script.Parent.ChangeColorState)\n\nlocal Blue = ChangeColorState:Extend("Blue")\nBlue.Transitions = {GoToRed}\n\nfunction Blue:OnEnter()\n    print(self.Data) -- Get state machine data\n    self:ChangeState("Red") -- Changes the current state to Red\n    self:GetState() -- "Blue"\n    self:GetPreviousState() -- Gets the previous state this state machine was in before Blue\n    self:ChangeData() -- Changes data from the state machine\nend\n\n\nreturn Blue\n')))}d.isMDXComponent=!0}}]);